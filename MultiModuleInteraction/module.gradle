
def initModuleCompile() {
    Properties properties = new Properties();
    File file = new File(rootDir.getAbsolutePath() + "/module.properties")
    properties.load(file.newDataInputStream())
    Iterator itr = properties.entrySet().iterator();
    while (itr.hasNext()) {
        Map.Entry e = (Map.Entry) itr.next();
        String key = e.getKey();
        rootProject.ext.setProperty(key, e.getValue());
    }
}

initModuleCompile()





def compile_submodule(){
//    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isSubmoduleDebug.toBoolean()) {
            compile project(':submodule')
        } else {
            compile(name: 'submodule-release', ext: 'aar')
        }
//    }
}
def compile_submodule2(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isSubmodule2Debug.toBoolean()) {
            compile project(':submodule2')
        } else {
            compile(name: 'submodule2-release', ext: 'aar')
        }
    }
}
def compile_interface(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isInterfaceDebug.toBoolean()) {
            compile project(':interface')
        } else {
            compile(name: 'interface-release', ext: 'aar')
        }
    }
}



def compile_spacebase(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isBasemoduleDebug.toBoolean()) {
            compile project(':basemodule')
        } else {
            compile(name: 'basemodule-release', ext: 'aar')
//            compile_interface(getProject())
//            compile dep.picasso
//            compile dep.recyclerView
//            compile dep.appcompatV7
//            compile dep.supportAnnotations
//            compile dep.design
//            compile dep.eventbus

        }
    }

}
