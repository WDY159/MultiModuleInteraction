apply plugin: 'com.android.application'
apply from: rootProject.file('module.gradle')
apply from: 'update-aar.gradle'
//apply plugin: 'AndResGuard'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.example.multimodule"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    println "dependencies"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile_submodule(getProject())
    compile_submodule2(getProject())
    compile_spacebase(getProject())
    compile_interface(getProject())
}

//andResGuard {
//    mappingFile = null
//    use7zip = true
//    useSign = true
//    keepRoot = false
//    whiteList = [
//            //for your icon
//            "R.drawable.ic_launcher",
//            //for fabric
//            "R.string.com.crashlytics.*",
//            //for umeng update
//            "R.string.umeng*",
//            "R.string.UM*",
//            "R.string.tb_*",
//            "R.layout.umeng*",
//            "R.layout.tb_*",
//            "R.drawable.umeng*",
//            "R.drawable.tb_*",
//            "R.anim.umeng*",
//            "R.color.umeng*",
//            "R.color.tb_*",
//            "R.style.*UM*",
//            "R.style.umeng*",
//            "R.id.umeng*",
//            // for google-services.json
//            "R.string.google_app_id",
//            "R.string.gcm_defaultSenderId",
//            "R.string.default_web_client_id",
//            "R.string.ga_trackingId",
//            "R.string.firebase_database_url",
//            "R.string.google_api_key",
//            "R.string.google_crash_reporting_api_key",
//            //umeng share for sina
//            "R.drawable.sina*",
//
//            //有抛异常说这个资源找不到，避免混淆
//            "R.layout.fragment_menu"
//    ]
//    compressFilePattern = [
//            "*.png",
//            "*.jpg",
//            "*.jpeg",
//            "*.gif",
//            "resources.arsc"
//    ]
//    sevenzip {
////        artifact = 'com.tencent.mm:SevenZip:1.1.8'
//        artifact = 'com.tencent.mm:SevenZip:1.1.9'
//        //path = "D:\\Program Files\\7-Zip\\7z.exe"
//    }
//}


def compile_submodule(Project projectModule){
    println "compile_submodule-----------"

    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isSubmoduleDebug.toBoolean()) {
            compile project(':submodule')
            println "compile-----------submodule"
        } else {
            compile(name: 'submodule-release', ext: 'aar')
            println "compile-----------submodule-release.aar"
        }
    }
}
def compile_submodule2(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isSubmodule2Debug.toBoolean()) {
            compile project(':submodule2')
        } else {
            compile(name: 'submodule2-release', ext: 'aar')
        }
    }
}
def compile_interface(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isInterfaceDebug.toBoolean()) {
            compile project(':interface')
        } else {
            compile(name: 'interface-release', ext: 'aar')
        }
    }
}



def compile_spacebase(Project projectModule){
    projectModule.dependencies{
        if (isAllDebug.toBoolean() || isBasemoduleDebug.toBoolean()) {
            compile project(':basemodule')
        } else {
            compile(name: 'basemodule-release', ext: 'aar')
//            compile_interface(getProject())
//            compile dep.picasso
//            compile dep.recyclerView
//            compile dep.appcompatV7
//            compile dep.supportAnnotations
//            compile dep.design
//            compile dep.eventbus

        }
    }

}