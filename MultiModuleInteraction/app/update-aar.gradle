// update module aar .
gradle.taskGraph.whenReady {
//    tasks.findAll {task->task.name.contains("release")}.each {
//        it.dependsOn{
            tasks.updateAAR.execute()
//        }
//    }
}

task updateAAR  {
//    eachLibsAAR()
    doLast{
    eachModuleAAR();
}
}


def eachModuleAAR(){
    def libPath= getRootProject().projectDir.getAbsolutePath()+"/libs/";
    for (Project project : getRootProject().getAllprojects()) {
        def projectModuleAARPath=project.buildDir.absolutePath+"/outputs/aar/";
        def dir = new File(projectModuleAARPath)
        if (!dir.exists()) continue

        dir.eachFile { File file ->
//            if (libsModuleAAR.name.contains(file.name)) {
                copy{
                    from (file.absolutePath){
                        exclude '**/*debug.aar'
                    }
                    into libPath
//                }
//                println '\n' + libsModuleAAR.name + ' Update SUCCESS!'
            }
        }
    }
}

def eachLibsAAR(){
    def libPath= getRootProject().projectDir.getAbsolutePath()+"/libs/";
    def libDir = new File(libPath)
    if (libDir.exists()){
        libDir.eachFile {
            eachModuleAAR(it)
        }
    }
}
task copyApks(type: Copy){
    doLast {
    from('submodule/build/outputs/aar/submodule-release.aar')
    exclude '*unaligned*'
    into('libs')
}}